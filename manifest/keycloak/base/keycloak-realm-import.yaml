apiVersion: k8s.keycloak.org/v2alpha1
kind: KeycloakRealmImport
metadata:
  name: openshift-realm-import
  namespace: keycloak
spec:
  keycloakCRName: keycloak-platform-instance
  realm:
    id: openshift
    realm: openshift
    displayName: "OpenShift Authentication"
    enabled: true
    sslRequired: "external"
    accessTokenLifespan: 300
    ssoSessionIdleTimeout: 1800
    ssoSessionMaxLifespan: 36000
    accessCodeLifespan: 60
    accessCodeLifespanUserAction: 300
    
    # Groups
    groups:
      - name: cluster-admins
        path: /cluster-admins
        attributes:
          openshift-role: ["cluster-admin"]
      - name: developers
        path: /developers
        attributes:
          openshift-role: ["basic-user"]
    
    # Roles
    roles:
      realm:
        - name: openshift-admin
          description: "OpenShift Cluster Administrator"
        - name: openshift-developer
          description: "OpenShift Developer"
        - name: argo-admin
          description: "ArgoCD Administrator"
        - name: argo-readonly
          description: "ArgoCD Read-Only User"
    
    # Clients
    clients:
      # OpenShift OAuth Client
      - clientId: openshift-client
        name: "OpenShift Console"
        description: "OpenShift Console OAuth Client"
        enabled: true
        protocol: openid-connect
        publicClient: false
        directAccessGrantsEnabled: false
        serviceAccountsEnabled: false
        implicitFlowEnabled: false
        standardFlowEnabled: true
        secret: "placeholder-will-be-updated"
        redirectUris:
          - "https://oauth-openshift.apps.cluster.example.com/oauth2callback/keycloak"
        webOrigins:
          - "https://console-openshift-console.apps.cluster.example.com"
          - "https://oauth-openshift.apps.cluster.example.com"
        protocolMappers:
          - name: "groups"
            protocol: "openid-connect"
            protocolMapper: "oidc-group-membership-mapper"
            config:
              "access.token.claim": "true"
              "claim.name": "groups"
              "id.token.claim": "true"
              "userinfo.token.claim": "true"
          - name: "preferred_username"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-property-mapper"
            config:
              "access.token.claim": "true"
              "claim.name": "preferred_username"
              "id.token.claim": "true"
              "user.attribute": "username"
              "userinfo.token.claim": "true"
      
      # ArgoCD OAuth Client
      - clientId: argocd-client
        name: "ArgoCD"
        description: "ArgoCD OIDC Client"
        enabled: true
        protocol: openid-connect
        publicClient: false
        directAccessGrantsEnabled: false
        serviceAccountsEnabled: false
        implicitFlowEnabled: false
        standardFlowEnabled: true
        secret: "placeholder-will-be-updated"
        redirectUris:
          - "https://openshift-gitops-server-openshift-gitops.apps.cluster.example.com/auth/callback"
        webOrigins:
          - "https://openshift-gitops-server-openshift-gitops.apps.cluster.example.com"
        protocolMappers:
          - name: "groups"
            protocol: "openid-connect"
            protocolMapper: "oidc-group-membership-mapper"
            config:
              "access.token.claim": "true"
              "claim.name": "groups"
              "id.token.claim": "true"
              "userinfo.token.claim": "true"
          - name: "preferred_username"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-property-mapper"
            config:
              "access.token.claim": "true"
              "claim.name": "preferred_username"
              "id.token.claim": "true"
              "user.attribute": "username"
              "userinfo.token.claim": "true"
