apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: keycloak-group-sync
rules:
- apiGroups: ["user.openshift.io"]
  resources: ["groups", "users"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: [""]
  resources: ["secrets", "configmaps"]
  verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keycloak-group-sync
  namespace: openshift-config
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: keycloak-group-sync
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keycloak-group-sync
subjects:
- kind: ServiceAccount
  name: keycloak-group-sync
  namespace: openshift-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-group-sync-config
  namespace: openshift-config
data:
  config.yaml: |
    kind: LDAPSyncConfig
    apiVersion: v1
    url: "https://keycloak.apps.cluster.example.io"
    insecure: false
    ca: ""
    bindDN: ""
    bindPassword: ""
    groupUIDNameMapping:
      "cluster-admins": "cluster-admins"
      "developers": "developers"
    rfc2307:
      groupsQuery:
        baseDN: "ou=groups,dc=example,dc=com"
        scope: sub
        derefAliases: never
        filter: (objectClass=groupOfNames)
        pageSize: 0
      groupUIDAttribute: cn
      groupNameAttributes: [cn]
      groupMembershipAttributes: [member]
      usersQuery:
        baseDN: "ou=users,dc=example,dc=com"
        scope: sub
        derefAliases: never
        filter: (objectClass=person)
        pageSize: 0
      userUIDAttribute: uid
      userNameAttributes: [uid]
      tolerateMemberNotFoundErrors: false
      tolerateMemberOutOfScopeErrors: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: keycloak-group-sync
  namespace: openshift-config
spec:
  schedule: "*/15 * * * *"  # Run every 15 minutes
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: keycloak-group-sync
          containers:
          - name: group-sync
            image: registry.redhat.io/openshift4/ose-cli:latest
            command:
            - /bin/bash
            - -c
            - |
              #!/bin/bash
              
              # Sync groups from Keycloak to OpenShift
              echo "Starting Keycloak group synchronization..."
              
              # Create cluster-admins group if it doesn't exist
              oc get group cluster-admins || oc adm groups new cluster-admins
              
              # Create developers group if it doesn't exist  
              oc get group developers || oc adm groups new developers
              
              # Add cluster-admin role to cluster-admins group
              oc adm policy add-cluster-role-to-group cluster-admin cluster-admins
              
              # Add basic-user role to developers group
              oc adm policy add-cluster-role-to-group basic-user developers
              
              echo "Group synchronization completed"
            volumeMounts:
            - name: config
              mountPath: /etc/config
              readOnly: true
          volumes:
          - name: config
            configMap:
              name: keycloak-group-sync-config
          restartPolicy: OnFailure
